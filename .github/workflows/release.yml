name: Release

on:
  push:
    branches:
      - master
      - main
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux builds
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: linux
            goarch: 386
          - goos: linux
            goarch: arm
            goarm: 7
          # macOS builds
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          # Windows builds
          - goos: windows
            goarch: amd64
          - goos: windows
            goarch: 386
          - goos: windows
            goarch: arm64
          # FreeBSD builds
          - goos: freebsd
            goarch: amd64
          - goos: freebsd
            goarch: arm64
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Get dependencies
      run: go mod download

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOARM: ${{ matrix.goarm }}
        CGO_ENABLED: 0
      run: |
        output_name='marianne-${{ matrix.goos }}-${{ matrix.goarch }}'
        if [ "${{ matrix.goarm }}" != "" ]; then
          output_name="${output_name}v${{ matrix.goarm }}"
        fi
        if [ "${{ matrix.goos }}" = "windows" ]; then
          output_name="${output_name}.exe"
        fi
        
        # Build static binary with version info
        VERSION="${GITHUB_REF_NAME}"
        if [[ "$VERSION" == "master" ]] || [[ "$VERSION" == "main" ]]; then
          VERSION="dev-${GITHUB_SHA::8}"
        fi
        
        go build -a -ldflags "-extldflags '-static' -s -w -X main.Version=${VERSION}" -o "${output_name}" .
        
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: marianne-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goarm && format('v{0}', matrix.goarm) || '' }}
        path: marianne-*

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Create checksums
      run: |
        cd artifacts
        # Move files out of subdirectories with unique names to avoid conflicts
        for dir in marianne-*/; do
          if [ -d "$dir" ]; then
            # Move all files from subdirectory to current directory
            find "$dir" -type f -exec mv {} . \;
            # Remove the now-empty directory
            rmdir "$dir"
          fi
        done
        # Create checksums for all binary files (not directories)
        find . -maxdepth 1 -type f -name 'marianne-*' -exec sha256sum {} \; > checksums.txt

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        draft: false
        prerelease: false
        files: |
          artifacts/marianne-*
          artifacts/checksums.txt
        body: |
          ## üöÄ Marianne ${{ github.ref_name }}
          
          ### üì¶ Download
          
          #### üêß Linux
          | Architecture | Download |
          |--------------|----------|
          | x64 (amd64) | [marianne-linux-amd64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-linux-amd64) |
          | ARM64 | [marianne-linux-arm64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-linux-arm64) |
          | x86 (386) | [marianne-linux-386](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-linux-386) |
          | ARMv7 | [marianne-linux-armv7](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-linux-armv7) |
          
          #### üçé macOS
          | Architecture | Download |
          |--------------|----------|
          | Intel (amd64) | [marianne-darwin-amd64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-darwin-amd64) |
          | Apple Silicon (arm64) | [marianne-darwin-arm64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-darwin-arm64) |
          
          #### ü™ü Windows
          | Architecture | Download |
          |--------------|----------|
          | x64 (amd64) | [marianne-windows-amd64.exe](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-windows-amd64.exe) |
          | x86 (386) | [marianne-windows-386.exe](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-windows-386.exe) |
          | ARM64 | [marianne-windows-arm64.exe](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-windows-arm64.exe) |
          
          #### üê° FreeBSD
          | Architecture | Download |
          |--------------|----------|
          | x64 (amd64) | [marianne-freebsd-amd64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-freebsd-amd64) |
          | ARM64 | [marianne-freebsd-arm64](https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-freebsd-arm64) |
          
          ### üì• Quick Install
          
          #### Linux/macOS (Intel)
          ```bash
          curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-$(uname -s | tr '[:upper:]' '[:lower:]')-amd64 -o marianne
          chmod +x marianne
          sudo mv marianne /usr/local/bin/
          ```
          
          #### macOS (Apple Silicon)
          ```bash
          curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/marianne-darwin-arm64 -o marianne
          chmod +x marianne
          sudo mv marianne /usr/local/bin/
          ```
          
          ### üîç Verify checksums
          
          ```bash
          curl -L https://github.com/${{ github.repository }}/releases/download/${{ github.ref_name }}/checksums.txt -o checksums.txt
          sha256sum -c checksums.txt
          ```
          
          ### üìã What's New
          
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/CHANGELOG.md) for details.
          
          ### üèóÔ∏è Build Info
          
          All binaries are statically linked and stripped for minimal size.

  # Create latest build artifacts on master push (not release)
  latest:
    name: Update Latest Build
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Prepare artifacts
      run: |
        cd artifacts
        # Move files out of subdirectories with unique names to avoid conflicts
        for dir in marianne-*/; do
          if [ -d "$dir" ]; then
            # Move all files from subdirectory to current directory
            find "$dir" -type f -exec mv {} . \;
            # Remove the now-empty directory
            rmdir "$dir"
          fi
        done
        # Create tarball with all binary files (not directories)
        tar czf marianne-latest-builds.tar.gz $(find . -maxdepth 1 -type f -name 'marianne-*' ! -name '*.tar.gz')

    - name: Update latest release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: latest
        name: Latest Build (Master)
        draft: false
        prerelease: true
        files: |
          artifacts/marianne-latest-builds.tar.gz
        body: |
          ## üîÑ Latest Development Build
          
          This release is automatically updated with the latest builds from the master branch.
          
          ‚ö†Ô∏è **Note**: These are development builds and may be unstable.
          
          For stable releases, please check the [releases page](https://github.com/${{ github.repository }}/releases).